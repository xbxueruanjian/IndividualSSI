<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
            http://www.springframework.org/schema/security   
            http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Spring-Security 的配置 -->
	<!--开启dubkg -->
<!-- 	<security:debug /> -->
	<!--过滤路径 -->
	<security:http pattern="/js/**/*.js" security="none" />
	<security:http pattern="/lib/**/*.js" security="none" />
	<security:http pattern="/css/**/*.css" security="none" />
	<security:http pattern="/img/**/*.png" security="none" />
	<security:http pattern="/img/**/*.jpg" security="none" />
	<security:http pattern="/img/**/*.gif" security="none" />
	<security:http pattern="/login.jsp" security="none" />



	<!-- 注意开启use-expressions.表示开启表达式. see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html -->
	<!--<security:http use-expressions="true" auto-config="true" access-denied-page="/j_spring_security_logout"> -->
	<security:http use-expressions="true"  entry-point-ref="authenticationProcessingFilterEntryPoint"  >

		<!-- <security:form-login login-page="/login.jsp" default-target-url='/system/default.jsp' always-use-default-target="true" authentication-failure-url="/login.jsp?login_error=1" /> -->
		<security:logout  invalidate-session="true" logout-success-url="/login.jsp" logout-url="/j_spring_security_logout"  delete-cookies="JSESSIONID" />

		<!--实现免登录验证 -->
		<!-- <security:remember-me  /> -->
	
		<security:anonymous enabled="false" />
		
		<security:session-management  invalid-session-url="/j_spring_security_logout" session-fixation-protection="migrateSession"  >
			<security:concurrency-control max-sessions="1"  error-if-maximum-exceeded="true" expired-url="/j_spring_security_logout" />
		</security:session-management>

		 <security:intercept-url pattern="/**" access="isAuthenticated()" />
		  
		<security:custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
		<security:custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
<!-- 		<security:session-management session-authentication-strategy-ref="sas" /> -->
	</security:http>

	<!--登录验证器 -->
	<bean id="loginFilter" class="xn.core.security.MyUsernamePasswordAuthenticationFilter">		
		<property name="filterProcessesUrl" value="/login_check" />
		<property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"/>
		<property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"/>
		<property name="authenticationManager" ref="myAuthenticationManager"/>
		<property name="sessionAuthenticationStrategy" ref="sas" />
	</bean>
	<bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
<!-- 	<bean id="sas" class="xn.core.security.MyConcurrentSessionControlStrategy"> -->
		<!--处理登录 -->
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<!-- 防止session攻击 -->
		<property name="alwaysCreateSession" value="true" />
		<property name="migrateSessionAttributes" value="false" />	
		<!--  同一个帐号 同时只能一个人登录 -->
<!-- 		<property name="exceptionIfMaximumExceeded" value="true" />	 -->
	</bean>
	
	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
<!-- 	<bean id="sessionRegistry" class="xn.core.security.MySessionRegistryImpl" /> -->


	<!-- 自定义资源文件   提示信息 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:message_zh_CN" />
	</bean>
	
	
<!-- 	<bean id="exceptionMappingAuthenticationFailureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler"> -->
<!-- 		<property name="exceptionMappings"> -->
<!-- 			<map> -->
<!-- 				用户不存在 -->
<!-- 				<entry key="org.springframework.security.core.userdetails.UsernameNotFoundException"  value="/login.jsp?sign=No User" /> -->
<!-- 				凭证错误(密码不正确) -->
<!-- 				<entry key="org.springframework.security.authentication.BadCredentialsException"  value="/login.jsp?sign=Bad Credentials" /> -->
<!-- 				用户不可用	 -->
<!-- 				<entry key="org.springframework.security.authentication.DisabledException"  value="/login.jsp?sign=User is disabled" /> -->
<!-- 				登陆凭证错误	 -->
<!-- 				<entry key="org.springframework.security.core.AuthenticationException"  value="/login.jsp?sign=Authentication Failure" /> -->
<!-- 			</map> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
	<!--登录成功  -->
	<bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/jsp/Main.jsp" />
	</bean>
	
	<!--登录失败 -->
	<bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login.jsp" />
	</bean>
	
	<!--认证过滤器  -->
	<bean id="myFilter" class="xn.core.security.MySecurityFilter" >
		<!--用户拥有的权限  -->
		<property name="authenticationManager" ref="myAuthenticationManager" />
		<!--用户是否拥有所请求资源的权限  -->
		<property name="accessDecisionManager" ref="myAccessDecisionManager" />
		<!--菜单与角色对应关系 -->
		<property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</bean>
	<!--实现了UserDatailsService的Bean  -->
	<security:authentication-manager alias="myAuthenticationManager"  >
		<security:authentication-provider user-service-ref="myUserDetailServicelmpl" >
			<!-- 登入 密码  采用MD5加密 -->
			<security:password-encoder hash="md5" ref="passwordEncoder" base64="false" />
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- 验证用户请求资源  是否拥有权限 -->
	<bean id="myAccessDecisionManager" class="xn.core.security.MyAccessDecisionManager"  />
	
	<!-- 系统运行时加载 系统要拦截的资源   与用户请求时要过滤的资源 -->
	<bean id="mySecurityMetadataSource" class="xn.core.security.MySecurityMetadateSoure" >
		<constructor-arg  name="iSecurityLogin"  ref="SecurityLoginService" />
	</bean>
	
	<!-- 获取用户登入角色信息 -->
	<bean id="myUserDetailServicelmpl" class="xn.core.security.MyUserDetailServiceImpl"/>

	<!-- 用户的密码加密或解密 -->
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	
	<!--未登录的切入点 -->
	<bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.jsp" />
	</bean>
	
	<!-- 开启Spring Security3认证和授权日志 -->
	<bean class="org.springframework.security.authentication.event.LoggerListener"/>
	<bean class="org.springframework.security.access.event.LoggerListener"/>

</beans>