<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/websocket 
                        http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd">


	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="xn.*.controller" />
	<!-- 配置注解驱动的Spring MVC Controller 的编程模型.注:次标签只在 Servlet MVC工作! -->


	<!-- <context:annotation-config /> -->

	<mvc:annotation-driven >
		<mvc:message-converters>
			<ref bean="mappingJacksonHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--开启默认的静态文件配置 -->
	<mvc:default-servlet-handler />


	<!-- 静态资源访问 -->
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<!-- <mvc:resources location="WEB-INF/assets/javascripts/" mapping="/javascripts/**" 
		/> -->
	<!-- <mvc:resources location="WEB-INF/assets/jsp/" mapping="/jsp/**" /> -->
	<mvc:resources location="/lib/" mapping="/lib/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
	<!-- <context:component-scan base-package="com.org.websocket" /> -->


	<!-- <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" 
		/> -->

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<!--<property name="prefix" value="/" />
		 <property name="suffix" value=".jsp" /> -->
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="location">
	       <value>classpath:syscfg.properties</value>
	    </property>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="${file.maxUploadSize}" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="${file.maxMemorySize}" />
	</bean>

	<!--国际化 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basenames">
			<list>
				<value>messages.welcome</value>
			</list>
		</property>
	</bean>

	<!--配置websocket -->
	<!-- <bean id="websocket" class="com.org.websocket.handler.WebsocketEndPoint" 
		/> -->
	<!-- <websocket:handlers> -->
	<!-- <websocket:mapping handler="websocket" path="/websocket.*" /> -->
	<!-- <websocket:handshake-interceptors> -->
	<!-- <bean class="com.org.websocket.HandshakeInterceptor" /> -->
	<!-- </websocket:handshake-interceptors> -->
	<!-- </websocket:handlers> -->
	<!-- 地址转发器 -->
	<!-- <bean name="HelloAction" class="com.xn.controller" /> <bean id="urlMapping" 
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"> 
		<property name="mappings"> <props> 映射URL地址 <prop key="/user/ShowUser">HelloAction</prop> 
		</props> </property> </bean> -->

	<!--视图解释器 -->
	<!-- <bean id="viewResolver" -->
	<!-- class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> -->
	<!-- <property name="suffix"> -->
	<!-- <value>.ftl</value> -->
	<!-- </property> -->
	<!-- <property name="contentType" value="text/html;charset=UTF-8"></property> -->
	<!-- </bean> -->

	<!-- 拦截器 -->
	<mvc:interceptors>  
	    <bean class="xn.core.interceptor.ControllerInterceptor"/>  
	</mvc:interceptors>  

</beans>